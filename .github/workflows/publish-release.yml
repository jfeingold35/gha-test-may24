name: publish-release
on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      tag:
        description: tag to be published
        type: string
        required: true

jobs:
  pretend-to-release:
    runs-on: ubuntu-latest
    steps:
      - run: echo "definitely did a release"
  create-main-to-dev-pr:
    needs: pretend-to-release
    env:
      GH_TOKEN: ${{ github.token }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
      - run: |
          NEW_VERSION=$(jq -r ".version" package.json)
          git checkout -b m2d/v$NEW_VERSION
          git push --set-upstream origin m2d/v$NEW_VERSION
      - run: gh pr create -B dev -H main --title "FILLER NAME, READ BODY FOR INFO" \
          --body "This branch and PR were automatically created following the v$NEW_VERSION release.
          It must be MERGED into dev, NOT SQUASHED, NOT REBASED. If you do a Squash or Rebase, it will cause irreconcilable
          conflicts between main and dev, and someone's day will be ruined.
          If there are conflicts between this branch and dev, you should do the following locally,
          - $ git checkout dev
          - $ git pull
          - $ git fetch --all
          - $ git checkout m2d/v$NEW_VERSION
          - $ git pull origin dev --no-rebase
          - Resolve the merge conflicts manually. When in doubt, ask the code's author for help.
          - $ git commit
          - $ git push"



#  merge-main-to-dev:
#    needs: pretend-to-release
#    permissions:
#      contents: write
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - run: |
#          git fetch --all
#          git checkout main
#          git config --global user.name "botty-mc-botface"
#          git config --global user.email "botbotbot@imabot.bot"
#          git pull
#          git checkout dev
#          git pull
#          git pull origin main --rebase
#          git push --force
#
#